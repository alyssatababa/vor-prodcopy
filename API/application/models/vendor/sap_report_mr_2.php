<?php defined('BASEPATH') OR exit('No direct script access allowed');
/**
*
*/
class Sap_report extends CI_Model
{
	
	function get_data(){
		$file_name = '19999999'.date('mdy').'1.VOR';
		$vendor_codes = '';
		$vendor_codes_02 = '';
		$vendor_codes_v4 = '';
		$vendor_codes_v5 = '';
		$old_dept = [];
		$date = "'2025-02-19 03:00:00'";
		$path = FCPATH;


		$get_sys = $this->db->query("SELECT CONFIG_VALUE FROM SMNTP_SYSTEM_CONFIG WHERE CONFIG_NAME = 'extraction_sap'");
		$result_sys = $get_sys->result();
		$sys = $result_sys[0]->CONFIG_VALUE;

		$update_records = array(
								'SAP_EXTRACTED' => 'Y',
								'SAP_DATE_EXTRACTED' => date('Y-m-d H:i:s')
							);

		
		$get_vendor_code_new = $this->db->query("SELECT SV_01.`VENDOR_CODE`, SV_02.`VENDOR_CODE_02` FROM SMNTP_VOR_EXTRACT SVE
						LEFT JOIN SMNTP_VENDOR SV_01 ON SVE.`VENDOR_CODE` = SV_01.`VENDOR_CODE`
						LEFT JOIN SMNTP_VENDOR SV_02 ON SVE.`VENDOR_CODE` = SV_02.`VENDOR_CODE_02`
						WHERE SVE.`SAP_EXTRACTED` != 'Y';");
		$result_vendor_code_new = $get_vendor_code_new->result();
		$count_vendor_code_new = count($result_vendor_code_new);
		if($count_vendor_code_new > 0){
		 	for($a=0; $a<$count_vendor_code_new; $a++){
		 		if($a == 0){
		 			//$vendor_codes .= '"'. $result_vendor_code_new[$a]->VENDOR_CODE . '"';
		 			//$vendor_codes_v4 .= '"'. $result_vendor_code_new[$a]->VENDOR_CODE_02 . '"';
		 		}else{
		 			//$vendor_codes .= ',"'. $result_vendor_code_new[$a]->VENDOR_CODE . '"';	
		 			//$vendor_codes_v4 .= ',"'. $result_vendor_code_new[$a]->VENDOR_CODE_02 . '"';	
		 		}

		 		$this->db->where('VENDOR_CODE', $result_vendor_code_new[$a]->VENDOR_CODE);
		 		$this->db->or_where('VENDOR_CODE', $result_vendor_code_new[$a]->VENDOR_CODE_02);
		 		//$this->db->update('SMNTP_VOR_EXTRACT', $update_records);
		 	}
		}

		// return $vendor_codes;

		/*if(strpos($path, 'dev') || strpos($path, 'uat')){
			$date_to = $this->db->query("SELECT * FROM SMNTP_VENDOR_STATUS_LOGS WHERE status_id = 19 AND DATE_UPDATED BETWEEN DATE_SUB(".$date.", INTERVAL ".$sys." DAY) AND ".$date."");
		}*/
		$date_to = $this->db->query("SELECT * FROM SMNTP_VENDOR_STATUS_LOGS WHERE status_id = 19 AND DATE_UPDATED BETWEEN DATE_SUB(".$date.", INTERVAL ".$sys." DAY) AND ".$date."");
		
		$result_date_to = $date_to->result();
		$count_date_to = count($result_date_to);

		// return $this->db->last_query();

		if($count_date_to >= 0){
			for($e=0; $e < $count_date_to; $e++){
			
				$date_from = $this->db->query("SELECT DATE_UPDATED
										FROM SMNTP_VENDOR_STATUS_LOGS 
										WHERE VENDOR_INVITE_ID = ".$result_date_to[$e]->VENDOR_INVITE_ID." AND STATUS_ID = 19 AND DATE_UPDATED < '".$result_date_to[$e]->DATE_UPDATED."'
										ORDER BY DATE_UPDATED DESC
										LIMIT 0,1");

				$result_date_from = $date_from->result();
				$count_date_from = count($result_date_from);


				//return $result_date_from[$e];

			

					if($count_date_from > 0){
						for($f=0; $f < $count_date_from; $f++){
						$get_vendor_invite_id = $this->db->query("SELECT * FROM SMNTP_VENDOR_STATUS_LOGS 
							WHERE DATE_UPDATED BETWEEN '".$result_date_from[$f]->DATE_UPDATED."' AND '". $result_date_to[$e]->DATE_UPDATED."'
							AND VENDOR_INVITE_ID = ".$result_date_to[$e]->VENDOR_INVITE_ID." ORDER BY DATE_UPDATED LIMIT 1,1");
						$result_get_vendor_invite_id = $get_vendor_invite_id->result();

						

						if($result_get_vendor_invite_id[0]->DATE_UPDATED != ''){


							if($result_get_vendor_invite_id[0]->STATUS_ID == 250){
								$vendor_code_adh = $this->db->query("SELECT * FROM SMNTP_VENDOR_ADH
																	WHERE VENDOR_INVITE_ID = ".$result_get_vendor_invite_id[0]->VENDOR_INVITE_ID."
																	AND DATE_CREATED BETWEEN DATE_SUB('".$result_get_vendor_invite_id[0]->DATE_UPDATED."', INTERVAL 1 MINUTE) AND '".$result_get_vendor_invite_id[0]->DATE_UPDATED."'");
								$result_vendor_code_adh = $vendor_code_adh->result();

								//return $this->db->last_query();


								if($result_vendor_code_adh[0]->VENDOR_TYPE != $result_vendor_code_adh[0]->MAIN_VT){
									$get_dept =  $this->db->query("SELECT SVAC.VENDOR_CAT_ID, SV.VENDOR_CODE_02 AS VENDOR_CODE, SVAC.VENDOR_INVITE_ID, SVAC.CATEGORY_ID, SVAC.DATE_CREATED, SVAC.ACTIVE,'VC02' as TYPE FROM SMNTP_VENDOR_AVC_CAT SVAC
										JOIN SMNTP_VENDOR SV ON SV.VENDOR_INVITE_ID = SVAC.VENDOR_INVITE_ID
										WHERE SVAC.VENDOR_INVITE_ID = ".$result_get_vendor_invite_id[0]->VENDOR_INVITE_ID."
										AND SVAC.DATE_CREATED BETWEEN '".$result_get_vendor_invite_id[$f]->DATE_UPDATED."' AND '".$result_date_to[$e]->DATE_UPDATED."'");
									$result_get_dept = $get_dept->result_array();
									$old_dept = array_merge($old_dept, $result_get_dept);
								}else{
									$get_dept =  $this->db->query("SELECT SVC.VENDOR_CAT_ID, SV.VENDOR_CODE, SVC.VENDOR_INVITE_ID, SVC.CATEGORY_ID, SVC.DATE_CREATED, SVC.ACTIVE, 'VC01' as TYPE FROM SMNTP_VENDOR_CATEGORIES SVC
										JOIN SMNTP_VENDOR SV ON SV.VENDOR_INVITE_ID = SVC.VENDOR_INVITE_ID
										WHERE SVC.VENDOR_INVITE_ID = ".$result_get_vendor_invite_id[0]->VENDOR_INVITE_ID."
										AND SVC.DATE_CREATED BETWEEN '".$result_get_vendor_invite_id[$f]->DATE_UPDATED."' AND '".$result_date_to[$e]->DATE_UPDATED."'");
									$result_get_dept = $get_dept->result_array();
									$old_dept = array_merge($old_dept, $result_get_dept);

								}

								//return $this->db->last_query();
								//return $result_vendor_code_adh[$f]->VENDOR_TYPE;

								if($result_vendor_code_adh[0]->VENDOR_TYPE != $result_vendor_code_adh[0]->MAIN_VT){
									$vendor_code = $this->db->query("SELECT SV.VENDOR_CODE_02, SVI.REGISTRATION_TYPE
													FROM SMNTP_VENDOR SV 
													JOIN SMNTP_VENDOR_INVITE SVI ON SV.VENDOR_INVITE_ID = SVI.VENDOR_INVITE_ID
													WHERE SV.VENDOR_INVITE_ID = ".$result_vendor_code_adh[0]->VENDOR_INVITE_ID."");
									$result_vendor_code = $vendor_code->result();
									$count_vendor_code = count($result_vendor_code);
									if($count_vendor_code > 0){
										if($result_vendor_code[0]->REGISTRATION_TYPE != 4){
											if($vendor_codes_02 != ''){
												$vendor_codes_02 .= ',"'. $result_vendor_code[0]->VENDOR_CODE_02 . '"';	
											}else{
												$vendor_codes_02 .= '"'. $result_vendor_code[0]->VENDOR_CODE_02 . '"';	
											}
										}else{
											if($vendor_codes_v4 != ''){
												$vendor_codes_v4 .= ',"'. $result_vendor_code[0]->VENDOR_CODE_02 . '"';	
											}else{
												$vendor_codes_v4 .= '"'. $result_vendor_code[0]->VENDOR_CODE_02 . '"';	
											}
										}
									}
								}else{
									$vendor_code = $this->db->query("SELECT SV.VENDOR_CODE, SVI.REGISTRATION_TYPE
													FROM SMNTP_VENDOR SV 
													JOIN SMNTP_VENDOR_INVITE SVI ON SV.VENDOR_INVITE_ID = SVI.VENDOR_INVITE_ID
													WHERE SV.VENDOR_INVITE_ID = ".$result_vendor_code_adh[0]->VENDOR_INVITE_ID."");
									$result_vendor_code = $vendor_code->result();
									$count_vendor_code = count($result_vendor_code);

									//return $this->db->last_query();
									if($count_vendor_code > 0){
										if($result_vendor_code[0]->REGISTRATION_TYPE != 4){
											if($vendor_codes != ''){
												$vendor_codes .= ',"'. $result_vendor_code[0]->VENDOR_CODE . '"';	
											}else{
												$vendor_codes .= '"'. $result_vendor_code[0]->VENDOR_CODE . '"';	
											}
										}else{
											if($vendor_codes_v5 != ''){
												$vendor_codes_v5 .= ',"'. $result_vendor_code[0]->VENDOR_CODE . '"';	
											}else{
												$vendor_codes_v5 .= '"'. $result_vendor_code[0]->VENDOR_CODE . '"';	
											}
										}
									}
								}
							}else{
								// registration type = 2,3
								$get_vendor_code = $this->db->query("SELECT SV.VENDOR_CODE FROM SMNTP_VENDOR_INVITE SVI 
																	 JOIN SMNTP_VENDOR SV ON SVI.VENDOR_INVITE_ID = SV.VENDOR_INVITE_ID
																	 JOIN SMNTP_VENDOR_STATUS SVS ON SVI.VENDOR_INVITE_ID = SVS.VENDOR_INVITE_ID
																	 WHERE SVS.STATUS_ID = 19
																	 AND SVI.VENDOR_INVITE_ID = ".$result_date_to[$e]->VENDOR_INVITE_ID."
																	 AND SVI.REGISTRATION_TYPE IN (2,3,5) 
																	 AND SVS.DATE_UPDATED BETWEEN DATE_SUB(".$date.", INTERVAL ".$sys." DAY) AND ".$date."");
								$result_vendor_code = $get_vendor_code->result();
								$count_vendor_code = count($result_vendor_code);

								if($count_vendor_code > 0){
									for($b=0; $b<$count_vendor_code; $b++){
										if($vendor_codes != ''){
											$vendor_codes .= ',"'. $result_vendor_code[$b]->VENDOR_CODE . '"';	
										}else{
											$vendor_codes .= '"'. $result_vendor_code[$b]->VENDOR_CODE . '"';	
										}
									}
								}
									// registration type = 2, 3
								 $get_vendor_code_02 = $this->db->query("SELECT SV.VENDOR_CODE_02 FROM SMNTP_VENDOR_INVITE SVI 
																	 JOIN SMNTP_VENDOR SV ON SVI.VENDOR_INVITE_ID = SV.VENDOR_INVITE_ID
																	 JOIN SMNTP_VENDOR_STATUS SVS ON SVI.VENDOR_INVITE_ID = SVS.VENDOR_INVITE_ID
																	 -- WHERE SVS.STATUS_ID = 19 
																	 AND SVI.VENDOR_INVITE_ID = ".$result_date_to[$e]->VENDOR_INVITE_ID."
																	 AND SV.VENDOR_CODE_02 IS NOT NULL
																	 AND SVI.REGISTRATION_TYPE IN (2,3) 
																	 AND SVS.DATE_UPDATED BETWEEN DATE_SUB(".$date.", INTERVAL ".$sys." DAY) AND ".$date."");


								$result_vendor_code_02 = $get_vendor_code_02->result();
								$count_vendor_code_02 = count($result_vendor_code_02);
								if($count_vendor_code_02 > 0){
									for($c=0; $c<$count_vendor_code_02; $c++){
										if($vendor_codes_02 != ''){
											$vendor_codes_02 .= ',"'. $result_vendor_code_02[$c]->VENDOR_CODE_02 . '"';	
										}else{
											$vendor_codes_02 .= '"'. $result_vendor_code_02[$c]->VENDOR_CODE_02 . '"';	
										}
									}
								}
							}	
						}
					}
				}else{
					// registration type = 2,3
					$get_vendor_code = $this->db->query("SELECT SV.VENDOR_CODE FROM SMNTP_VENDOR_INVITE SVI 
														 JOIN SMNTP_VENDOR SV ON SVI.VENDOR_INVITE_ID = SV.VENDOR_INVITE_ID
														 JOIN SMNTP_VENDOR_STATUS SVS ON SVI.VENDOR_INVITE_ID = SVS.VENDOR_INVITE_ID
														 WHERE SVS.STATUS_ID = 19
														 AND SVI.VENDOR_INVITE_ID = ".$result_date_to[$e]->VENDOR_INVITE_ID."
														 AND SVI.REGISTRATION_TYPE IN (1,2,3,5) 
														 AND SVS.DATE_UPDATED BETWEEN DATE_SUB(".$date.", INTERVAL ".$sys." DAY) AND ".$date."");
					$result_vendor_code = $get_vendor_code->result();
					$count_vendor_code = count($result_vendor_code);

					if($count_vendor_code > 0){
						for($b=0; $b<$count_vendor_code; $b++){
							if($vendor_codes != ''){
								$vendor_codes .= ',"'. $result_vendor_code[$b]->VENDOR_CODE . '"';	
							}else{
								$vendor_codes .= '"'. $result_vendor_code[$b]->VENDOR_CODE . '"';	
							}
						}
					}
						// registration type = 2, 3
					 $get_vendor_code_02 = $this->db->query("SELECT SV.VENDOR_CODE_02 FROM SMNTP_VENDOR_INVITE SVI 
														 JOIN SMNTP_VENDOR SV ON SVI.VENDOR_INVITE_ID = SV.VENDOR_INVITE_ID
														 JOIN SMNTP_VENDOR_STATUS SVS ON SVI.VENDOR_INVITE_ID = SVS.VENDOR_INVITE_ID
														 WHERE SVS.STATUS_ID = 19 
														 AND SVI.VENDOR_INVITE_ID = ".$result_date_to[$e]->VENDOR_INVITE_ID."
														 AND SV.VENDOR_CODE_02 IS NOT NULL
														 AND SVI.REGISTRATION_TYPE IN (2,3) 
														 AND SVS.DATE_UPDATED BETWEEN DATE_SUB(".$date.", INTERVAL ".$sys." DAY) AND ".$date."");


					$result_vendor_code_02 = $get_vendor_code_02->result();
					$count_vendor_code_02 = count($result_vendor_code_02);
					if($count_vendor_code_02 > 0){
						for($c=0; $c<$count_vendor_code_02; $c++){
							if($vendor_codes_02 != ''){
								$vendor_codes_02 .= ',"'. $result_vendor_code_02[$c]->VENDOR_CODE_02 . '"';	
							}else{
								$vendor_codes_02 .= '"'. $result_vendor_code_02[$c]->VENDOR_CODE_02 . '"';	
							}
						}
					}
				}
			}
		}		

		//return $vendor_codes_v5;
		
		if($vendor_codes != ''){	
			$query = 'SELECT 
		CASE WHEN SV.VENDOR_CODE IN ('.$vendor_codes.') THEN CONCAT(UCASE(SV.VENDOR_NAME), " - " ,SV.VENDOR_CODE)
			ELSE CONCAT(UCASE(SV.VENDOR_NAME), " - " ,SV.VENDOR_CODE_02)
			END AS H_VENDOR_NAME,
		UCASE(SV.VENDOR_NAME) AS H_VENDOR_NAME_ALT,
		CASE WHEN SV.VENDOR_CODE IN ('.$vendor_codes.') THEN SV.VENDOR_CODE
		ELSE SV.VENDOR_CODE_02
		END
		AS H_SEGMENT1, 
		CASE WHEN SV.VENDOR_CODE IN ('.$vendor_codes.') THEN 
				CASE SV.TRADE_VENDOR_TYPE 
					WHEN 1 THEN "TRADE OUTRIGHT" 
					WHEN 2 THEN "TRADE STORE CONSIGNOR" 
					ELSE "NON TRADE GENERAL" 
				END
			ELSE
				CASE SV.TRADE_VENDOR_TYPE 
					WHEN 2 THEN "TRADE OUTRIGHT" 
					WHEN 1 THEN "TRADE STORE CONSIGNOR" 
				END 
			END AS H_VENDOR_TYPE_LOOKUP_CODE, STP.TERMS_PAYMENT_NAME AS H_TERMS_NAME, "N" AS H_ALWAYS_TAKE_DISC_FLAG, "DUE" AS H_PAY_DATE_BASIS_LOOKUP_CODE,
			SS.TERMSPAYMENT AS H_PAY_GROUP_LOOKUP_CODE, SS.TERMSPAYMENT AS H_PAYMENT_PRIORITY, "PHP" AS H_INVOICE_CURRENCY_CODE, "PHP" AS H_PAYMENT_CURRENCY_CODE, "" AS H_DISTRIBUTION_SET_NAME, 
			SV.TAX_ID_NO AS H_NUM_1099, SO.OWNERSHIP_NAME AS H_ORG_TYPE_LOOKUP_CODE, 
			SV.TAX_CLASSIFICATION AS H_VAT_CODE, "ELECTRONIC" AS H_PAYMENT_METHOD_LOOKUP_CODE, "Y" AS H_AMOUNT_INCLUDES_TAX_FLAG, 
			SV.TAX_ID_NO AS H_VAT_REGISTRATION_NUM, 
			"Y" AS H_ALLOW_AWT_FLAG,  SO.OWNERSHIP_ID AS H_AWT_GROUP_NAME,  "Global Data Elements" AS H_ATTRIBUTE_CATEGORY,  "0" AS H_ATTRIBUTE1,  "Y" AS H_ALLOW_TAX_APPLICABILITY,  "" AS H_BANK_NAME,  "" AS H_BRANCH_NAME,  "" AS H_ACCOUNT_NUMBER,  "N" AS H_BANK_ATTRIBUTE,  "HEAD OFFICE" AS S_VENDOR_SITE_CODE,  "Y" AS S_PURCHASING_SITE_FLAG,  "Y" AS S_PAY_SITE_FLAG, 
		UCASE(SVA.ADDRESS_LINE) AS S_ADDRESS_LINE1, 
		UCASE(SCity.CITY_NAME) AS S_CITY, "PH" AS S_COUNTRY, "" AS S_AREA_CODE, 
		CASE WHEN CD.TEL_NO = 0 THEN "" ELSE CD.TEL_NO END AS S_PHONE, 
		CASE WHEN CD.FAX_NO = 0 THEN "" ELSE CD.FAX_NO END AS S_FAX, 
		"ELECTRONIC" AS S_PAYMENT_METHOD_LOOKUP_CODE, "Invoice" AS S_TERMS_DATE_BASIS, SV.TAX_CLASSIFICATION AS S_VAT_CODE, "" AS S_DISTRIBUTION_SET_NAME,
		CONCAT(
			(CASE LENGTH(SME.COMPANY_CODE) WHEN 1 THEN CONCAT("00",SME.COMPANY_CODE)
			WHEN 2 THEN CONCAT("0",SME.COMPANY_CODE)
			WHEN 3 THEN SME.COMPANY_CODE END)
		, ".0000.0000.XXXX.",
		
		"YYYY"
		,".8888.000000.000000") AS S_ACCTS_PAY_CODE_COMBINATION, 
		CONCAT(
			(CASE LENGTH(SME.COMPANY_CODE) WHEN 1 THEN CONCAT("00",SME.COMPANY_CODE)
			WHEN 2 THEN CONCAT("0",SME.COMPANY_CODE)
			WHEN 3 THEN SME.COMPANY_CODE END)
		, ".0000.0000.1510200.0000.8888.000000.000000") AS S_PREPAY_CODE_COMBINATION, 
		SS.TERMSPAYMENT AS S_PAY_GROUP_LOOKUP_CODE, SS.TERMSPAYMENT AS S_PAYMENT_PRIORITY, STP.TERMS_PAYMENT_NAME AS S_TERMS_NAME, 
		"PHP" AS S_INVOICE_CURRENCY_CODE, "PHP" AS S_PAYMENT_CURRENCY_CODE, "Y" AS S_AMOUNT_INCLUDES_TAX_FLAG, "Global Data Elements" AS S_ATTRIBUTE_CATEGORY, "" AS S_ATTRIBUTE1, "" AS S_ATTRIBUTE2, 
		"" AS S_ATTRIBUTE15, SV.TAX_ID_NO AS S_VAT_REGISTRATION_NUM, SME.COMPANY_CODE AS S_OPERATING_UNIT_NAME, "Y" AS S_ALLOW_AWT_FLAG, SO.OWNERSHIP_ID AS S_AWT_GROUP_NAME, 
		CD.EMAIL AS S_EMAIL_ADDRESS, "Y" AS S_PRIMARY_PAY_SITE_FLAG, "HEAD OFFICE" AS C_VENDOR_SITE_CODE, SME.COMPANY_CODE AS C_OPERATING_UNIT_NAME, 
		SVO.FIRST_NAME AS C_FIRST_NAME, SVO.MIDDLE_NAME AS C_MIDDLE_NAME, SVO.LAST_NAME AS C_LAST_NAME, "" AS C_PREFIX, SVO.POSITION AS C_TITLE, CASE WHEN CD.TEL_NO =0 THEN "" ELSE CD.TEL_NO END AS C_PHONE,
		AVR.NAME AS C_CONTACT_NAME_ALT, 
		"" AS C_ALT_PHONE, 
		CD.FAX_NO AS C_FAX, "'.$file_name.'" AS FILE_NAME, 
		SVA.ZIP_CODE AS OA_ZIP_CODE, CASE WHEN CD.TEL_NO_EXTENSION_LOCAL_NUMBER = 0 THEN "" ELSE CD.TEL_NO_EXTENSION_LOCAL_NUMBER END AS TEL_NO_EXT_LOCAL_NO, 
		CASE WHEN CD.FAX_NO_EXTENSION_LOCAL_NUMBER = 0 THEN "" ELSE CD.FAX_NO_EXTENSION_LOCAL_NUMBER END AS FAX_NO_EXT_LOCAL_NO, CD.MOBILE_NO
		FROM SMNTP_VENDOR SV
		JOIN SMNTP_VENDOR_TYPE SVT ON SV.VENDOR_TYPE = SVT.VENDOR_TYPE_ID
		JOIN SMNTP_VENDOR_ADDRESSES SVA ON SV.VENDOR_ID = SVA.VENDOR_ID AND SVA.ADDRESS_TYPE = "1" AND `PRIMARY` = 1
		JOIN SMNTP_CITY SCity ON SVA.BRGY_MUNICIPALITY_ID = SCity.CITY_ID
		JOIN SMNTP_COUNTRY SCountry ON SVA.COUNTRY_ID = SCountry.COUNTRY_ID
		JOIN(SELECT VENDOR_ID, REPLACE(GROUP_CONCAT(TEL_NO),",","") AS TEL_NO, SUM(TEL_NO_EXTENSION_LOCAL_NUMBER)AS TEL_NO_EXTENSION_LOCAL_NUMBER, REPLACE(GROUP_CONCAT(FAX_NO),",","") AS FAX_NO,SUM(FAX_NO_EXTENSION_LOCAL_NUMBER) AS FAX_NO_EXTENSION_LOCAL_NUMBER,SUM(MOBILE_NO) AS MOBILE_NO, REPLACE(GROUP_CONCAT(EMAIL),",","") AS EMAIL FROM (
		SELECT
		SVCDTHREE.VENDOR_ID,
		CASE WHEN SVCDTHREE.CONTACT_DETAIL_TYPE = 1 THEN CONCAT(SVCDTHREE.AREA_CODE, " ",SVCDTHREE.CONTACT_DETAIL) ELSE "" END AS TEL_NO, 
		CASE WHEN SVCDTHREE.CONTACT_DETAIL_TYPE = 1 THEN SVCDTHREE.EXTENSION_LOCAL_NUMBER ELSE "" END AS TEL_NO_EXTENSION_LOCAL_NUMBER, 
		CASE WHEN SVCDTHREE.CONTACT_DETAIL_TYPE = 2 THEN CONCAT(SVCDTHREE.AREA_CODE, " ", SVCDTHREE.CONTACT_DETAIL) ELSE "" END AS FAX_NO,
		CASE WHEN SVCDTHREE.CONTACT_DETAIL_TYPE = 2 THEN SVCDTHREE.EXTENSION_LOCAL_NUMBER ELSE "" END AS FAX_NO_EXTENSION_LOCAL_NUMBER, 
		CASE WHEN SVCDTHREE.CONTACT_DETAIL_TYPE = 3 THEN SVCDTHREE.CONTACT_DETAIL ELSE "" END AS MOBILE_NO,
		CASE WHEN SVCDTHREE.CONTACT_DETAIL_TYPE = 4 THEN SVCDTHREE.CONTACT_DETAIL ELSE "" END AS EMAIL
		FROM 
			(SELECT VENDOR_ID, CONTACT_DETAIL_TYPE, MIN(VENDOR_CONTACT_DETAIL_ID) AS VENDOR_CONTACT_DETAIL_ID FROM SMNTP_VENDOR_CONTACT_DETAILS GROUP BY VENDOR_ID,CONTACT_DETAIL_TYPE) SAC
			JOIN SMNTP_VENDOR_CONTACT_DETAILS SVCDTHREE ON SAC.VENDOR_CONTACT_DETAIL_ID = SVCDTHREE.VENDOR_CONTACT_DETAIL_ID)a GROUP BY VENDOR_ID) 
		CD ON SV.VENDOR_ID = CD.VENDOR_ID
		JOIN (SELECT SVRONE.* FROM 
			(SELECT VENDOR_ID, MIN(VENDOR_REP_ID) AS VENDOR_REP_ID FROM SMNTP_VENDOR_REP GROUP BY VENDOR_ID) SAB
			JOIN SMNTP_VENDOR_REP SVRONE ON SAB.VENDOR_REP_ID = SVRONE.VENDOR_REP_ID
		) AVR ON SV.VENDOR_ID = AVR.VENDOR_ID
		JOIN (
			SELECT SVOONE.* FROM 
			(SELECT VENDOR_ID, MIN(VENDOR_OWNER_ID) AS VENDOR_OWNER_ID FROM SMNTP_VENDOR_OWNERS GROUP BY VENDOR_ID) SAA
			JOIN SMNTP_VENDOR_OWNERS SVOONE ON SAA.VENDOR_OWNER_ID = SVOONE.VENDOR_OWNER_ID
		) SVO ON SV.VENDOR_ID = SVO.VENDOR_ID
		JOIN SMNTP_OWNERSHIP SO ON SV.OWNERSHIP_TYPE = SO.OWNERSHIP_ID
		JOIN SMNTP_VENDOR_STATUS SS ON SV.VENDOR_INVITE_ID = SS.VENDOR_INVITE_ID
		JOIN SMNTP_TERMS_PAYMENT STP ON 
							CASE WHEN SV.VENDOR_CODE IN ('.$vendor_codes.') THEN SS.TERMSPAYMENT 
							ELSE SS.AVC_TERMSPAYMENT 
							END  = STP.TERMS_PAYMENT_ID
		JOIN (SELECT DISTINCT SME.`COMPANY_CODE`, SVC.VENDOR_INVITE_ID FROM SMNTP_VENDOR_CATEGORIES SVC 
			JOIN SMNTP_CATEGORY SCat ON SVC.CATEGORY_ID = SCat.CATEGORY_ID AND SCat.CATEGORY_ID != 259
			JOIN (SELECT DISTINCT DEPT_CODE, DEPT_DESC FROM TEST_20220525) TTable ON SCat.CATEGORY_NAME = TTable.DEPT_DESC 
			JOIN SMNTP_MMS_ENVDEPT SME ON TTable.DEPT_CODE = SME.DEPT) SME ON SV.VENDOR_INVITE_ID = SME.VENDOR_INVITE_ID
		
		WHERE SV.VENDOR_CODE IN ('.$vendor_codes.') OR SV.VENDOR_CODE_02 IN ('.$vendor_codes.')';

			$res = $this->db->query($query);
			$res = $res->result_array();
		}else{
			$res = [];
		}

		

		// registration type = 2, 3
		if($vendor_codes_02 != ''){

			$query2 = 'SELECT 
			CASE WHEN SV.VENDOR_CODE IN ('.$vendor_codes_02.') THEN CONCAT(UCASE(SV.VENDOR_NAME), " - " ,SV.VENDOR_CODE)
				ELSE CONCAT(UCASE(SV.VENDOR_NAME), " - " ,SV.VENDOR_CODE_02)
				END AS H_VENDOR_NAME,
			UCASE(SV.VENDOR_NAME) AS H_VENDOR_NAME_ALT,
			CASE WHEN SV.VENDOR_CODE IN ('.$vendor_codes_02.') THEN SV.VENDOR_CODE
			ELSE SV.VENDOR_CODE_02
			END
			AS H_SEGMENT1, 
			CASE WHEN SV.VENDOR_CODE IN ('.$vendor_codes_02.') THEN 
					CASE SV.TRADE_VENDOR_TYPE 
						WHEN 1 THEN "TRADE OUTRIGHT" 
						WHEN 2 THEN "TRADE STORE CONSIGNOR" 
						ELSE "NON TRADE GENERAL" 
					END
				ELSE
					CASE SV.TRADE_VENDOR_TYPE 
						WHEN 2 THEN "TRADE OUTRIGHT" 
						WHEN 1 THEN "TRADE STORE CONSIGNOR" 
					END 
				END AS H_VENDOR_TYPE_LOOKUP_CODE, STP.TERMS_PAYMENT_NAME AS H_TERMS_NAME, "N" AS H_ALWAYS_TAKE_DISC_FLAG, "DUE" AS H_PAY_DATE_BASIS_LOOKUP_CODE,
				SS.TERMSPAYMENT AS H_PAY_GROUP_LOOKUP_CODE, SS.TERMSPAYMENT AS H_PAYMENT_PRIORITY, "PHP" AS H_INVOICE_CURRENCY_CODE, "PHP" AS H_PAYMENT_CURRENCY_CODE, "" AS H_DISTRIBUTION_SET_NAME, 
				SV.TAX_ID_NO AS H_NUM_1099, SO.OWNERSHIP_NAME AS H_ORG_TYPE_LOOKUP_CODE, 
				SV.TAX_CLASSIFICATION AS H_VAT_CODE, "ELECTRONIC" AS H_PAYMENT_METHOD_LOOKUP_CODE, "Y" AS H_AMOUNT_INCLUDES_TAX_FLAG, 
				SV.TAX_ID_NO AS H_VAT_REGISTRATION_NUM, 
				"Y" AS H_ALLOW_AWT_FLAG,  SO.OWNERSHIP_ID AS H_AWT_GROUP_NAME,  "Global Data Elements" AS H_ATTRIBUTE_CATEGORY,  "0" AS H_ATTRIBUTE1,  "Y" AS H_ALLOW_TAX_APPLICABILITY,  "" AS H_BANK_NAME,  "" AS H_BRANCH_NAME,  "" AS H_ACCOUNT_NUMBER,  "N" AS H_BANK_ATTRIBUTE,  "HEAD OFFICE" AS S_VENDOR_SITE_CODE,  "Y" AS S_PURCHASING_SITE_FLAG,  "Y" AS S_PAY_SITE_FLAG, 
			UCASE(SVA.ADDRESS_LINE) AS S_ADDRESS_LINE1, 
			UCASE(SCity.CITY_NAME) AS S_CITY, "PH" AS S_COUNTRY, "" AS S_AREA_CODE, 
			CASE WHEN CD.TEL_NO = 0 THEN "" ELSE CD.TEL_NO END AS S_PHONE, 
			CASE WHEN CD.FAX_NO = 0 THEN "" ELSE CD.FAX_NO END AS S_FAX, 
			"ELECTRONIC" AS S_PAYMENT_METHOD_LOOKUP_CODE, "Invoice" AS S_TERMS_DATE_BASIS, SV.TAX_CLASSIFICATION AS S_VAT_CODE, "" AS S_DISTRIBUTION_SET_NAME,
			CONCAT(
				(CASE LENGTH(SME.COMPANY_CODE) WHEN 1 THEN CONCAT("00",SME.COMPANY_CODE)
				WHEN 2 THEN CONCAT("0",SME.COMPANY_CODE)
				WHEN 3 THEN SME.COMPANY_CODE END)
			, ".0000.0000.XXXX.",
			
			"YYYY"
			,".8888.000000.000000") AS S_ACCTS_PAY_CODE_COMBINATION, 
			CONCAT(
				(CASE LENGTH(SME.COMPANY_CODE) WHEN 1 THEN CONCAT("00",SME.COMPANY_CODE)
				WHEN 2 THEN CONCAT("0",SME.COMPANY_CODE)
				WHEN 3 THEN SME.COMPANY_CODE END)
			, ".0000.0000.1510200.0000.8888.000000.000000") AS S_PREPAY_CODE_COMBINATION, 
			SS.TERMSPAYMENT AS S_PAY_GROUP_LOOKUP_CODE, SS.TERMSPAYMENT AS S_PAYMENT_PRIORITY, STP.TERMS_PAYMENT_NAME AS S_TERMS_NAME, 
			"PHP" AS S_INVOICE_CURRENCY_CODE, "PHP" AS S_PAYMENT_CURRENCY_CODE, "Y" AS S_AMOUNT_INCLUDES_TAX_FLAG, "Global Data Elements" AS S_ATTRIBUTE_CATEGORY, "" AS S_ATTRIBUTE1, "" AS S_ATTRIBUTE2, 
			"" AS S_ATTRIBUTE15, SV.TAX_ID_NO AS S_VAT_REGISTRATION_NUM, SME.COMPANY_CODE AS S_OPERATING_UNIT_NAME, "Y" AS S_ALLOW_AWT_FLAG, SO.OWNERSHIP_ID AS S_AWT_GROUP_NAME, 
			CD.EMAIL AS S_EMAIL_ADDRESS, "Y" AS S_PRIMARY_PAY_SITE_FLAG, "HEAD OFFICE" AS C_VENDOR_SITE_CODE, SME.COMPANY_CODE AS C_OPERATING_UNIT_NAME, 
			SVO.FIRST_NAME AS C_FIRST_NAME, SVO.MIDDLE_NAME AS C_MIDDLE_NAME, SVO.LAST_NAME AS C_LAST_NAME, "" AS C_PREFIX, SVO.POSITION AS C_TITLE, CASE WHEN CD.TEL_NO =0 THEN "" ELSE CD.TEL_NO END AS C_PHONE,
			AVR.NAME AS C_CONTACT_NAME_ALT, 
			"" AS C_ALT_PHONE, 
			CD.FAX_NO AS C_FAX, "'.$file_name.'" AS FILE_NAME, 
			SVA.ZIP_CODE AS OA_ZIP_CODE, CASE WHEN CD.TEL_NO_EXTENSION_LOCAL_NUMBER = 0 THEN "" ELSE CD.TEL_NO_EXTENSION_LOCAL_NUMBER END AS TEL_NO_EXT_LOCAL_NO, 
			CASE WHEN CD.FAX_NO_EXTENSION_LOCAL_NUMBER = 0 THEN "" ELSE CD.FAX_NO_EXTENSION_LOCAL_NUMBER END AS FAX_NO_EXT_LOCAL_NO, CD.MOBILE_NO
			FROM SMNTP_VENDOR SV
			JOIN SMNTP_VENDOR_INVITE SVI ON SV.VENDOR_INVITE_ID = SVI.VENDOR_INVITE_ID
			JOIN SMNTP_VENDOR_TYPE SVT ON SV.VENDOR_TYPE = SVT.VENDOR_TYPE_ID
			JOIN SMNTP_VENDOR_ADDRESSES SVA ON SV.VENDOR_ID = SVA.VENDOR_ID AND SVA.ADDRESS_TYPE = "1" AND `PRIMARY` = 1
			JOIN SMNTP_CITY SCity ON SVA.BRGY_MUNICIPALITY_ID = SCity.CITY_ID
			JOIN SMNTP_COUNTRY SCountry ON SVA.COUNTRY_ID = SCountry.COUNTRY_ID
			JOIN(SELECT VENDOR_ID, REPLACE(GROUP_CONCAT(TEL_NO),",","") AS TEL_NO, SUM(TEL_NO_EXTENSION_LOCAL_NUMBER)AS TEL_NO_EXTENSION_LOCAL_NUMBER, REPLACE(GROUP_CONCAT(FAX_NO),",","") AS FAX_NO,SUM(FAX_NO_EXTENSION_LOCAL_NUMBER) AS FAX_NO_EXTENSION_LOCAL_NUMBER,SUM(MOBILE_NO) AS MOBILE_NO, REPLACE(GROUP_CONCAT(EMAIL),",","") AS EMAIL FROM (
			SELECT
			SVCDTHREE.VENDOR_ID,
			CASE WHEN SVCDTHREE.CONTACT_DETAIL_TYPE = 1 THEN CONCAT(SVCDTHREE.AREA_CODE, " ",SVCDTHREE.CONTACT_DETAIL) ELSE "" END AS TEL_NO, 
			CASE WHEN SVCDTHREE.CONTACT_DETAIL_TYPE = 1 THEN SVCDTHREE.EXTENSION_LOCAL_NUMBER ELSE "" END AS TEL_NO_EXTENSION_LOCAL_NUMBER, 
			CASE WHEN SVCDTHREE.CONTACT_DETAIL_TYPE = 2 THEN CONCAT(SVCDTHREE.AREA_CODE, " ", SVCDTHREE.CONTACT_DETAIL) ELSE "" END AS FAX_NO,
			CASE WHEN SVCDTHREE.CONTACT_DETAIL_TYPE = 2 THEN SVCDTHREE.EXTENSION_LOCAL_NUMBER ELSE "" END AS FAX_NO_EXTENSION_LOCAL_NUMBER, 
			CASE WHEN SVCDTHREE.CONTACT_DETAIL_TYPE = 3 THEN SVCDTHREE.CONTACT_DETAIL ELSE "" END AS MOBILE_NO,
			CASE WHEN SVCDTHREE.CONTACT_DETAIL_TYPE = 4 THEN SVCDTHREE.CONTACT_DETAIL ELSE "" END AS EMAIL
			FROM 
				(SELECT VENDOR_ID, CONTACT_DETAIL_TYPE, MIN(VENDOR_CONTACT_DETAIL_ID) AS VENDOR_CONTACT_DETAIL_ID FROM SMNTP_VENDOR_CONTACT_DETAILS GROUP BY VENDOR_ID,CONTACT_DETAIL_TYPE) SAC
				JOIN SMNTP_VENDOR_CONTACT_DETAILS SVCDTHREE ON SAC.VENDOR_CONTACT_DETAIL_ID = SVCDTHREE.VENDOR_CONTACT_DETAIL_ID)a GROUP BY VENDOR_ID) 
			CD ON SV.VENDOR_ID = CD.VENDOR_ID
			JOIN (SELECT SVRONE.* FROM 
				(SELECT VENDOR_ID, MIN(VENDOR_REP_ID) AS VENDOR_REP_ID FROM SMNTP_VENDOR_REP GROUP BY VENDOR_ID) SAB
				JOIN SMNTP_VENDOR_REP SVRONE ON SAB.VENDOR_REP_ID = SVRONE.VENDOR_REP_ID
			) AVR ON SV.VENDOR_ID = AVR.VENDOR_ID
			JOIN (
				SELECT SVOONE.* FROM 
				(SELECT VENDOR_ID, MIN(VENDOR_OWNER_ID) AS VENDOR_OWNER_ID FROM SMNTP_VENDOR_OWNERS GROUP BY VENDOR_ID) SAA
				JOIN SMNTP_VENDOR_OWNERS SVOONE ON SAA.VENDOR_OWNER_ID = SVOONE.VENDOR_OWNER_ID
			) SVO ON SV.VENDOR_ID = SVO.VENDOR_ID
			JOIN SMNTP_OWNERSHIP SO ON SV.OWNERSHIP_TYPE = SO.OWNERSHIP_ID
			JOIN SMNTP_VENDOR_STATUS SS ON SV.VENDOR_INVITE_ID = SS.VENDOR_INVITE_ID
			JOIN SMNTP_TERMS_PAYMENT STP ON 
								CASE WHEN SV.VENDOR_CODE IN ('.$vendor_codes_02.') THEN SS.TERMSPAYMENT 
								ELSE SS.AVC_TERMSPAYMENT 
								END  = STP.TERMS_PAYMENT_ID
			JOIN (SELECT DISTINCT SME.`COMPANY_CODE`, SVC.VENDOR_INVITE_ID FROM SMNTP_VENDOR_AVC_CAT SVC 
				JOIN SMNTP_CATEGORY SCat ON SVC.CATEGORY_ID = SCat.CATEGORY_ID AND SCat.CATEGORY_ID != 259
				JOIN (SELECT DISTINCT DEPT_CODE, DEPT_DESC FROM TEST_20220525) TTable ON SCat.CATEGORY_NAME = TTable.DEPT_DESC 
				JOIN SMNTP_MMS_ENVDEPT SME ON TTable.DEPT_CODE = SME.DEPT) SME ON SV.VENDOR_INVITE_ID = SME.VENDOR_INVITE_ID
			
			WHERE SV.VENDOR_CODE_02 IN ('.$vendor_codes_02.')
			AND SVI.REGISTRATION_TYPE IN (2,3)';

			$res2 = $this->db->query($query2);
			$res2 = $res2->result_array();
		}else{
			$res2 = [];
		}

		 // registration type = 4
		 $get_vendor_code_v4 = $this->db->query("SELECT SV.VENDOR_CODE, SV.VENDOR_CODE_02 FROM SMNTP_VENDOR_INVITE SVI 
											 JOIN SMNTP_VENDOR SV ON SVI.VENDOR_INVITE_ID = SV.VENDOR_INVITE_ID
											 JOIN SMNTP_VENDOR_STATUS SVS ON SVI.VENDOR_INVITE_ID = SVS.VENDOR_INVITE_ID
											 WHERE SVS.STATUS_ID = 19 
											 AND SVI.REGISTRATION_TYPE IN (4) 
											 AND SVS.DATE_UPDATED BETWEEN DATE_SUB(".$date.", INTERVAL ".$sys." DAY) AND ".$date."");

		$result_vendor_code_v4 = $get_vendor_code_v4->result();
		$count_vendor_code_v4 = count($result_vendor_code_v4);
		if($count_vendor_code_v4 > 0){
			for($d=0; $d<$count_vendor_code_v4; $d++){
				if($vendor_codes_v4 != ''){
					$vendor_codes_v4 .= ',"'. $result_vendor_code_v4[$d]->VENDOR_CODE_02 . '"';	
				}else{
					$vendor_codes_v4 .= '"'. $result_vendor_code_v4[$d]->VENDOR_CODE_02 . '"';	
				}
			}
		}

		if($vendor_codes_v4 != ''){

			$query3 = 'SELECT CONCAT(UCASE(SV.VENDOR_NAME), " - " ,SV.VENDOR_CODE_02) AS H_VENDOR_NAME,
		UCASE(SV.VENDOR_NAME) AS H_VENDOR_NAME_ALT,
		SV.VENDOR_CODE_02 AS H_SEGMENT1, 
		CASE SV.TRADE_VENDOR_TYPE 
			WHEN 1 THEN "TRADE OUTRIGHT" 
			WHEN 2 THEN "TRADE STORE CONSIGNOR" 
			ELSE "NON TRADE GENERAL" 
		END AS H_VENDOR_TYPE_LOOKUP_CODE,
		STP.TERMS_PAYMENT_NAME AS H_TERMS_NAME, "N" AS H_ALWAYS_TAKE_DISC_FLAG, "DUE" AS H_PAY_DATE_BASIS_LOOKUP_CODE,
		SS.TERMSPAYMENT AS H_PAY_GROUP_LOOKUP_CODE, SS.TERMSPAYMENT AS H_PAYMENT_PRIORITY, "PHP" AS H_INVOICE_CURRENCY_CODE, "PHP" AS H_PAYMENT_CURRENCY_CODE, "" AS H_DISTRIBUTION_SET_NAME, 
		SV.TAX_ID_NO AS H_NUM_1099, SO.OWNERSHIP_NAME AS H_ORG_TYPE_LOOKUP_CODE, 
		SV.TAX_CLASSIFICATION AS H_VAT_CODE, "ELECTRONIC" AS H_PAYMENT_METHOD_LOOKUP_CODE, "Y" AS H_AMOUNT_INCLUDES_TAX_FLAG, 
		SV.TAX_ID_NO AS H_VAT_REGISTRATION_NUM, 
		"Y" AS H_ALLOW_AWT_FLAG,  SO.OWNERSHIP_ID AS H_AWT_GROUP_NAME,  "Global Data Elements" AS H_ATTRIBUTE_CATEGORY,  "0" AS H_ATTRIBUTE1,  "Y" AS H_ALLOW_TAX_APPLICABILITY,  "" AS H_BANK_NAME,  "" AS H_BRANCH_NAME,  "" AS H_ACCOUNT_NUMBER,  "N" AS H_BANK_ATTRIBUTE,  "HEAD OFFICE" AS S_VENDOR_SITE_CODE,  "Y" AS S_PURCHASING_SITE_FLAG,  "Y" AS S_PAY_SITE_FLAG, 
		UCASE(SVA.ADDRESS_LINE) AS S_ADDRESS_LINE1, 
		UCASE(SCity.CITY_NAME) AS S_CITY, "PH" AS S_COUNTRY, "" AS S_AREA_CODE, 
		CASE WHEN CD.TEL_NO = 0 THEN "" ELSE CD.TEL_NO END AS S_PHONE, 
		CASE WHEN CD.FAX_NO = 0 THEN "" ELSE CD.FAX_NO END AS S_FAX, 
		"ELECTRONIC" AS S_PAYMENT_METHOD_LOOKUP_CODE, "Invoice" AS S_TERMS_DATE_BASIS, SV.TAX_CLASSIFICATION AS S_VAT_CODE, "" AS S_DISTRIBUTION_SET_NAME,
		CONCAT(
			(CASE LENGTH(SME.COMPANY_CODE) WHEN 1 THEN CONCAT("00",SME.COMPANY_CODE)
			WHEN 2 THEN CONCAT("0",SME.COMPANY_CODE)
			WHEN 3 THEN SME.COMPANY_CODE END)
		, ".0000.0000.XXXX.",
		
		"YYYY"
		,".8888.000000.000000") AS S_ACCTS_PAY_CODE_COMBINATION, 
		CONCAT(
			(CASE LENGTH(SME.COMPANY_CODE) WHEN 1 THEN CONCAT("00",SME.COMPANY_CODE)
			WHEN 2 THEN CONCAT("0",SME.COMPANY_CODE)
			WHEN 3 THEN SME.COMPANY_CODE END)
		, ".0000.0000.1510200.0000.8888.000000.000000") AS S_PREPAY_CODE_COMBINATION, 
		SS.TERMSPAYMENT AS S_PAY_GROUP_LOOKUP_CODE, SS.TERMSPAYMENT AS S_PAYMENT_PRIORITY, STP.TERMS_PAYMENT_NAME AS S_TERMS_NAME, 
		"PHP" AS S_INVOICE_CURRENCY_CODE, "PHP" AS S_PAYMENT_CURRENCY_CODE, "Y" AS S_AMOUNT_INCLUDES_TAX_FLAG, "Global Data Elements" AS S_ATTRIBUTE_CATEGORY, "" AS S_ATTRIBUTE1, "" AS S_ATTRIBUTE2, 
		"" AS S_ATTRIBUTE15, SV.TAX_ID_NO AS S_VAT_REGISTRATION_NUM, SME.COMPANY_CODE AS S_OPERATING_UNIT_NAME, "Y" AS S_ALLOW_AWT_FLAG, SO.OWNERSHIP_ID AS S_AWT_GROUP_NAME, 
		CD.EMAIL AS S_EMAIL_ADDRESS, "Y" AS S_PRIMARY_PAY_SITE_FLAG, "HEAD OFFICE" AS C_VENDOR_SITE_CODE, SME.COMPANY_CODE AS C_OPERATING_UNIT_NAME, 
		SVO.FIRST_NAME AS C_FIRST_NAME, SVO.MIDDLE_NAME AS C_MIDDLE_NAME, SVO.LAST_NAME AS C_LAST_NAME, "" AS C_PREFIX, SVO.POSITION AS C_TITLE, CASE WHEN CD.TEL_NO =0 THEN "" ELSE CD.TEL_NO END AS C_PHONE,
		AVR.NAME AS C_CONTACT_NAME_ALT, 
		"" AS C_ALT_PHONE, 
		CD.FAX_NO AS C_FAX, "'.$file_name.'" AS FILE_NAME, 
		SVA.ZIP_CODE AS OA_ZIP_CODE, CASE WHEN CD.TEL_NO_EXTENSION_LOCAL_NUMBER = 0 THEN "" ELSE CD.TEL_NO_EXTENSION_LOCAL_NUMBER END AS TEL_NO_EXT_LOCAL_NO, 
		CASE WHEN CD.FAX_NO_EXTENSION_LOCAL_NUMBER = 0 THEN "" ELSE CD.FAX_NO_EXTENSION_LOCAL_NUMBER END AS FAX_NO_EXT_LOCAL_NO, CD.MOBILE_NO
		FROM SMNTP_VENDOR SV
		JOIN SMNTP_VENDOR_TYPE SVT ON SV.VENDOR_TYPE = SVT.VENDOR_TYPE_ID
		JOIN SMNTP_VENDOR_ADDRESSES SVA ON SV.VENDOR_ID = SVA.VENDOR_ID AND SVA.ADDRESS_TYPE = "1" AND `PRIMARY` = 1
		JOIN SMNTP_CITY SCity ON SVA.BRGY_MUNICIPALITY_ID = SCity.CITY_ID
		JOIN SMNTP_COUNTRY SCountry ON SVA.COUNTRY_ID = SCountry.COUNTRY_ID
		JOIN(SELECT VENDOR_ID, REPLACE(GROUP_CONCAT(TEL_NO),",","") AS TEL_NO, SUM(TEL_NO_EXTENSION_LOCAL_NUMBER)AS TEL_NO_EXTENSION_LOCAL_NUMBER, REPLACE(GROUP_CONCAT(FAX_NO),",","") AS FAX_NO,SUM(FAX_NO_EXTENSION_LOCAL_NUMBER) AS FAX_NO_EXTENSION_LOCAL_NUMBER,SUM(MOBILE_NO) AS MOBILE_NO, REPLACE(GROUP_CONCAT(EMAIL),",","") AS EMAIL FROM (
		SELECT
		SVCDTHREE.VENDOR_ID,
		CASE WHEN SVCDTHREE.CONTACT_DETAIL_TYPE = 1 THEN CONCAT(SVCDTHREE.AREA_CODE, " ",SVCDTHREE.CONTACT_DETAIL) ELSE "" END AS TEL_NO, 
		CASE WHEN SVCDTHREE.CONTACT_DETAIL_TYPE = 1 THEN SVCDTHREE.EXTENSION_LOCAL_NUMBER ELSE "" END AS TEL_NO_EXTENSION_LOCAL_NUMBER, 
		CASE WHEN SVCDTHREE.CONTACT_DETAIL_TYPE = 2 THEN CONCAT(SVCDTHREE.AREA_CODE, " ", SVCDTHREE.CONTACT_DETAIL) ELSE "" END AS FAX_NO,
		CASE WHEN SVCDTHREE.CONTACT_DETAIL_TYPE = 2 THEN SVCDTHREE.EXTENSION_LOCAL_NUMBER ELSE "" END AS FAX_NO_EXTENSION_LOCAL_NUMBER, 
		CASE WHEN SVCDTHREE.CONTACT_DETAIL_TYPE = 3 THEN SVCDTHREE.CONTACT_DETAIL ELSE "" END AS MOBILE_NO,
		CASE WHEN SVCDTHREE.CONTACT_DETAIL_TYPE = 4 THEN SVCDTHREE.CONTACT_DETAIL ELSE "" END AS EMAIL
		FROM 
			(SELECT VENDOR_ID, CONTACT_DETAIL_TYPE, MIN(VENDOR_CONTACT_DETAIL_ID) AS VENDOR_CONTACT_DETAIL_ID FROM SMNTP_VENDOR_CONTACT_DETAILS GROUP BY VENDOR_ID,CONTACT_DETAIL_TYPE) SAC
			JOIN SMNTP_VENDOR_CONTACT_DETAILS SVCDTHREE ON SAC.VENDOR_CONTACT_DETAIL_ID = SVCDTHREE.VENDOR_CONTACT_DETAIL_ID)a GROUP BY VENDOR_ID) 
		CD ON SV.VENDOR_ID = CD.VENDOR_ID
		JOIN (SELECT SVRONE.* FROM 
			(SELECT VENDOR_ID, MIN(VENDOR_REP_ID) AS VENDOR_REP_ID FROM SMNTP_VENDOR_REP GROUP BY VENDOR_ID) SAB
			JOIN SMNTP_VENDOR_REP SVRONE ON SAB.VENDOR_REP_ID = SVRONE.VENDOR_REP_ID
		) AVR ON SV.VENDOR_ID = AVR.VENDOR_ID
		JOIN (
			SELECT SVOONE.* FROM 
			(SELECT VENDOR_ID, MIN(VENDOR_OWNER_ID) AS VENDOR_OWNER_ID FROM SMNTP_VENDOR_OWNERS GROUP BY VENDOR_ID) SAA
			JOIN SMNTP_VENDOR_OWNERS SVOONE ON SAA.VENDOR_OWNER_ID = SVOONE.VENDOR_OWNER_ID
		) SVO ON SV.VENDOR_ID = SVO.VENDOR_ID
		JOIN SMNTP_OWNERSHIP SO ON SV.OWNERSHIP_TYPE = SO.OWNERSHIP_ID
		JOIN SMNTP_VENDOR_STATUS SS ON SV.VENDOR_INVITE_ID = SS.VENDOR_INVITE_ID
		JOIN SMNTP_TERMS_PAYMENT STP ON 
							CASE WHEN SV.VENDOR_CODE IN ('.$vendor_codes_v4.') THEN SS.TERMSPAYMENT 
							ELSE SS.AVC_TERMSPAYMENT 
							END  = STP.TERMS_PAYMENT_ID
		JOIN (SELECT DISTINCT SME.`COMPANY_CODE`, SVC.VENDOR_INVITE_ID FROM SMNTP_VENDOR_AVC_CAT SVC 
			JOIN SMNTP_CATEGORY SCat ON SVC.CATEGORY_ID = SCat.CATEGORY_ID AND SCat.CATEGORY_ID != 259
			JOIN (SELECT DISTINCT DEPT_CODE, DEPT_DESC FROM TEST_20220525) TTable ON SCat.CATEGORY_NAME = TTable.DEPT_DESC 
			JOIN SMNTP_MMS_ENVDEPT SME ON TTable.DEPT_CODE = SME.DEPT) SME ON SV.VENDOR_INVITE_ID = SME.VENDOR_INVITE_ID
		
		WHERE SV.VENDOR_CODE_02 IN ('.$vendor_codes_v4.')';

		$res3 = $this->db->query($query3);
		$res3 = $res3->result_array();
	}else{
		$res3 = [];
	}


if($vendor_codes_v5 != ''){

			$query4 = 'SELECT CONCAT(UCASE(SV.VENDOR_NAME), " - " ,SV.VENDOR_CODE) AS H_VENDOR_NAME,
		UCASE(SV.VENDOR_NAME) AS H_VENDOR_NAME_ALT,
		SV.VENDOR_CODE AS H_SEGMENT1, 
		CASE SV.TRADE_VENDOR_TYPE 
			WHEN 1 THEN "TRADE OUTRIGHT" 
			WHEN 2 THEN "TRADE STORE CONSIGNOR" 
			ELSE "NON TRADE GENERAL" 
		END AS H_VENDOR_TYPE_LOOKUP_CODE,
		STP.TERMS_PAYMENT_NAME AS H_TERMS_NAME, "N" AS H_ALWAYS_TAKE_DISC_FLAG, "DUE" AS H_PAY_DATE_BASIS_LOOKUP_CODE,
		SS.TERMSPAYMENT AS H_PAY_GROUP_LOOKUP_CODE, SS.TERMSPAYMENT AS H_PAYMENT_PRIORITY, "PHP" AS H_INVOICE_CURRENCY_CODE, "PHP" AS H_PAYMENT_CURRENCY_CODE, "" AS H_DISTRIBUTION_SET_NAME, 
		SV.TAX_ID_NO AS H_NUM_1099, SO.OWNERSHIP_NAME AS H_ORG_TYPE_LOOKUP_CODE, 
		SV.TAX_CLASSIFICATION AS H_VAT_CODE, "ELECTRONIC" AS H_PAYMENT_METHOD_LOOKUP_CODE, "Y" AS H_AMOUNT_INCLUDES_TAX_FLAG, 
		SV.TAX_ID_NO AS H_VAT_REGISTRATION_NUM, 
		"Y" AS H_ALLOW_AWT_FLAG,  SO.OWNERSHIP_ID AS H_AWT_GROUP_NAME,  "Global Data Elements" AS H_ATTRIBUTE_CATEGORY,  "0" AS H_ATTRIBUTE1,  "Y" AS H_ALLOW_TAX_APPLICABILITY,  "" AS H_BANK_NAME,  "" AS H_BRANCH_NAME,  "" AS H_ACCOUNT_NUMBER,  "N" AS H_BANK_ATTRIBUTE,  "HEAD OFFICE" AS S_VENDOR_SITE_CODE,  "Y" AS S_PURCHASING_SITE_FLAG,  "Y" AS S_PAY_SITE_FLAG, 
		UCASE(SVA.ADDRESS_LINE) AS S_ADDRESS_LINE1, 
		UCASE(SCity.CITY_NAME) AS S_CITY, "PH" AS S_COUNTRY, "" AS S_AREA_CODE, 
		CASE WHEN CD.TEL_NO = 0 THEN "" ELSE CD.TEL_NO END AS S_PHONE, 
		CASE WHEN CD.FAX_NO = 0 THEN "" ELSE CD.FAX_NO END AS S_FAX, 
		"ELECTRONIC" AS S_PAYMENT_METHOD_LOOKUP_CODE, "Invoice" AS S_TERMS_DATE_BASIS, SV.TAX_CLASSIFICATION AS S_VAT_CODE, "" AS S_DISTRIBUTION_SET_NAME,
		CONCAT(
			(CASE LENGTH(SME.COMPANY_CODE) WHEN 1 THEN CONCAT("00",SME.COMPANY_CODE)
			WHEN 2 THEN CONCAT("0",SME.COMPANY_CODE)
			WHEN 3 THEN SME.COMPANY_CODE END)
		, ".0000.0000.XXXX.",
		
		"YYYY"
		,".8888.000000.000000") AS S_ACCTS_PAY_CODE_COMBINATION, 
		CONCAT(
			(CASE LENGTH(SME.COMPANY_CODE) WHEN 1 THEN CONCAT("00",SME.COMPANY_CODE)
			WHEN 2 THEN CONCAT("0",SME.COMPANY_CODE)
			WHEN 3 THEN SME.COMPANY_CODE END)
		, ".0000.0000.1510200.0000.8888.000000.000000") AS S_PREPAY_CODE_COMBINATION, 
		SS.TERMSPAYMENT AS S_PAY_GROUP_LOOKUP_CODE, SS.TERMSPAYMENT AS S_PAYMENT_PRIORITY, STP.TERMS_PAYMENT_NAME AS S_TERMS_NAME, 
		"PHP" AS S_INVOICE_CURRENCY_CODE, "PHP" AS S_PAYMENT_CURRENCY_CODE, "Y" AS S_AMOUNT_INCLUDES_TAX_FLAG, "Global Data Elements" AS S_ATTRIBUTE_CATEGORY, "" AS S_ATTRIBUTE1, "" AS S_ATTRIBUTE2, 
		"" AS S_ATTRIBUTE15, SV.TAX_ID_NO AS S_VAT_REGISTRATION_NUM, SME.COMPANY_CODE AS S_OPERATING_UNIT_NAME, "Y" AS S_ALLOW_AWT_FLAG, SO.OWNERSHIP_ID AS S_AWT_GROUP_NAME, 
		CD.EMAIL AS S_EMAIL_ADDRESS, "Y" AS S_PRIMARY_PAY_SITE_FLAG, "HEAD OFFICE" AS C_VENDOR_SITE_CODE, SME.COMPANY_CODE AS C_OPERATING_UNIT_NAME, 
		SVO.FIRST_NAME AS C_FIRST_NAME, SVO.MIDDLE_NAME AS C_MIDDLE_NAME, SVO.LAST_NAME AS C_LAST_NAME, "" AS C_PREFIX, SVO.POSITION AS C_TITLE, CASE WHEN CD.TEL_NO =0 THEN "" ELSE CD.TEL_NO END AS C_PHONE,
		AVR.NAME AS C_CONTACT_NAME_ALT, 
		"" AS C_ALT_PHONE, 
		CD.FAX_NO AS C_FAX, "'.$file_name.'" AS FILE_NAME, 
		SVA.ZIP_CODE AS OA_ZIP_CODE, CASE WHEN CD.TEL_NO_EXTENSION_LOCAL_NUMBER = 0 THEN "" ELSE CD.TEL_NO_EXTENSION_LOCAL_NUMBER END AS TEL_NO_EXT_LOCAL_NO, 
		CASE WHEN CD.FAX_NO_EXTENSION_LOCAL_NUMBER = 0 THEN "" ELSE CD.FAX_NO_EXTENSION_LOCAL_NUMBER END AS FAX_NO_EXT_LOCAL_NO, CD.MOBILE_NO
		FROM SMNTP_VENDOR SV
		JOIN SMNTP_VENDOR_TYPE SVT ON SV.VENDOR_TYPE = SVT.VENDOR_TYPE_ID
		JOIN SMNTP_VENDOR_ADDRESSES SVA ON SV.VENDOR_ID = SVA.VENDOR_ID AND SVA.ADDRESS_TYPE = "1" AND `PRIMARY` = 1
		JOIN SMNTP_CITY SCity ON SVA.BRGY_MUNICIPALITY_ID = SCity.CITY_ID
		JOIN SMNTP_COUNTRY SCountry ON SVA.COUNTRY_ID = SCountry.COUNTRY_ID
		JOIN(SELECT VENDOR_ID, REPLACE(GROUP_CONCAT(TEL_NO),",","") AS TEL_NO, SUM(TEL_NO_EXTENSION_LOCAL_NUMBER)AS TEL_NO_EXTENSION_LOCAL_NUMBER, REPLACE(GROUP_CONCAT(FAX_NO),",","") AS FAX_NO,SUM(FAX_NO_EXTENSION_LOCAL_NUMBER) AS FAX_NO_EXTENSION_LOCAL_NUMBER,SUM(MOBILE_NO) AS MOBILE_NO, REPLACE(GROUP_CONCAT(EMAIL),",","") AS EMAIL FROM (
		SELECT
		SVCDTHREE.VENDOR_ID,
		CASE WHEN SVCDTHREE.CONTACT_DETAIL_TYPE = 1 THEN CONCAT(SVCDTHREE.AREA_CODE, " ",SVCDTHREE.CONTACT_DETAIL) ELSE "" END AS TEL_NO, 
		CASE WHEN SVCDTHREE.CONTACT_DETAIL_TYPE = 1 THEN SVCDTHREE.EXTENSION_LOCAL_NUMBER ELSE "" END AS TEL_NO_EXTENSION_LOCAL_NUMBER, 
		CASE WHEN SVCDTHREE.CONTACT_DETAIL_TYPE = 2 THEN CONCAT(SVCDTHREE.AREA_CODE, " ", SVCDTHREE.CONTACT_DETAIL) ELSE "" END AS FAX_NO,
		CASE WHEN SVCDTHREE.CONTACT_DETAIL_TYPE = 2 THEN SVCDTHREE.EXTENSION_LOCAL_NUMBER ELSE "" END AS FAX_NO_EXTENSION_LOCAL_NUMBER, 
		CASE WHEN SVCDTHREE.CONTACT_DETAIL_TYPE = 3 THEN SVCDTHREE.CONTACT_DETAIL ELSE "" END AS MOBILE_NO,
		CASE WHEN SVCDTHREE.CONTACT_DETAIL_TYPE = 4 THEN SVCDTHREE.CONTACT_DETAIL ELSE "" END AS EMAIL
		FROM 
			(SELECT VENDOR_ID, CONTACT_DETAIL_TYPE, MIN(VENDOR_CONTACT_DETAIL_ID) AS VENDOR_CONTACT_DETAIL_ID FROM SMNTP_VENDOR_CONTACT_DETAILS GROUP BY VENDOR_ID,CONTACT_DETAIL_TYPE) SAC
			JOIN SMNTP_VENDOR_CONTACT_DETAILS SVCDTHREE ON SAC.VENDOR_CONTACT_DETAIL_ID = SVCDTHREE.VENDOR_CONTACT_DETAIL_ID)a GROUP BY VENDOR_ID) 
		CD ON SV.VENDOR_ID = CD.VENDOR_ID
		JOIN (SELECT SVRONE.* FROM 
			(SELECT VENDOR_ID, MIN(VENDOR_REP_ID) AS VENDOR_REP_ID FROM SMNTP_VENDOR_REP GROUP BY VENDOR_ID) SAB
			JOIN SMNTP_VENDOR_REP SVRONE ON SAB.VENDOR_REP_ID = SVRONE.VENDOR_REP_ID
		) AVR ON SV.VENDOR_ID = AVR.VENDOR_ID
		JOIN (
			SELECT SVOONE.* FROM 
			(SELECT VENDOR_ID, MIN(VENDOR_OWNER_ID) AS VENDOR_OWNER_ID FROM SMNTP_VENDOR_OWNERS GROUP BY VENDOR_ID) SAA
			JOIN SMNTP_VENDOR_OWNERS SVOONE ON SAA.VENDOR_OWNER_ID = SVOONE.VENDOR_OWNER_ID
		) SVO ON SV.VENDOR_ID = SVO.VENDOR_ID
		JOIN SMNTP_OWNERSHIP SO ON SV.OWNERSHIP_TYPE = SO.OWNERSHIP_ID
		JOIN SMNTP_VENDOR_STATUS SS ON SV.VENDOR_INVITE_ID = SS.VENDOR_INVITE_ID
		JOIN SMNTP_TERMS_PAYMENT STP ON 
							CASE WHEN SV.VENDOR_CODE IN ('.$vendor_codes_v5.') THEN SS.TERMSPAYMENT 
							ELSE SS.AVC_TERMSPAYMENT 
							END  = STP.TERMS_PAYMENT_ID
		JOIN (SELECT DISTINCT SME.`COMPANY_CODE`, SVC.VENDOR_INVITE_ID FROM SMNTP_VENDOR_CATEGORIES SVC 
			JOIN SMNTP_CATEGORY SCat ON SVC.CATEGORY_ID = SCat.CATEGORY_ID AND SCat.CATEGORY_ID != 259
			JOIN (SELECT DISTINCT DEPT_CODE, DEPT_DESC FROM TEST_20220525) TTable ON SCat.CATEGORY_NAME = TTable.DEPT_DESC 
			JOIN SMNTP_MMS_ENVDEPT SME ON TTable.DEPT_CODE = SME.DEPT) SME ON SV.VENDOR_INVITE_ID = SME.VENDOR_INVITE_ID
		
		WHERE SV.VENDOR_CODE IN ('.$vendor_codes_v5.')';

		$res4 = $this->db->query($query4);
		$res4 = $res4->result_array();
	}else{
		$res4 = [];
	}


	$finalquery = array_merge($res, $res2, $res3, $res4);

	$arr_exclude = [];

	//return $old_dept;

		
		foreach($old_dept as $od){
			if(!in_array($od['VENDOR_CODE'], array_column($arr_exclude, 0))){
				array_push($arr_exclude, array($od['VENDOR_CODE'], $od['VENDOR_INVITE_ID'], $od['TYPE'], $od['CATEGORY_ID']));
			}else{
				$arr_dim = array_search($od['VENDOR_CODE'], array_column($arr_exclude, 0));
				$arr_exclude[$arr_dim][3] = $arr_exclude[$arr_dim][3] . "','" . $od['CATEGORY_ID'];
			}

		}


	if(count($arr_exclude) != 0){

			foreach ($arr_exclude as $value) {
					$cat_list = $this->db->query("SELECT DISTINCT SME.`COMPANY_CODE`, SME.DEPT, SVC.VENDOR_INVITE_ID, SV.VENDOR_CODE FROM SMNTP_VENDOR_CATEGORIES SVC 
						JOIN SMNTP_VENDOR SV ON SV.VENDOR_INVITE_ID = SVC.VENDOR_INVITE_ID
						JOIN SMNTP_CATEGORY SCat ON SVC.CATEGORY_ID = SCat.CATEGORY_ID
						JOIN (SELECT DISTINCT DEPT_CODE, DEPT_DESC FROM TEST_20220525) TTable ON SCat.CATEGORY_NAME = TTable.DEPT_DESC 
						JOIN SMNTP_MMS_ENVDEPT SME ON TTable.DEPT_CODE = SME.DEPT
						WHERE SVC.VENDOR_INVITE_ID = '".$value['1']."' AND SVC.CATEGORY_ID NOT IN ('".$value['3']."')
						UNION ALL
						SELECT DISTINCT SME.`COMPANY_CODE`, SME.DEPT, SVC.VENDOR_INVITE_ID, SV.VENDOR_CODE_02 AS VENDOR_CODE FROM SMNTP_VENDOR_AVC_CAT SVC 
						JOIN SMNTP_VENDOR SV ON SV.VENDOR_INVITE_ID = SVC.VENDOR_INVITE_ID
						JOIN SMNTP_CATEGORY SCat ON SVC.CATEGORY_ID = SCat.CATEGORY_ID
						JOIN (SELECT DISTINCT DEPT_CODE, DEPT_DESC FROM TEST_20220525) TTable ON SCat.CATEGORY_NAME = TTable.DEPT_DESC 
						JOIN SMNTP_MMS_ENVDEPT SME ON TTable.DEPT_CODE = SME.DEPT
						WHERE SVC.VENDOR_INVITE_ID = '".$value['1']."' AND SVC.CATEGORY_ID NOT IN ('".$value['3']."')")->result_array();

			//return $this->db->last_query();
			$count_cat_list = count($cat_list);

				for($i=0; $i<$count_cat_list; $i++){
					if(strlen($cat_list[$i]['COMPANY_CODE']) <= 3){
						$dept = $cat_list[$i]['COMPANY_CODE'];
					}else if(strlen($cat_list[$i]['COMPANY_CODE']) == 2){
						$dept = '0'.$cat_list[$i]['COMPANY_CODE'];
					}else{
						$dept = '00'.$cat_list[$i]['COMPANY_CODE'];
					}
					
					$findKey = $this->search_revisions($finalquery, $cat_list[$i]['VENDOR_CODE'], 'H_SEGMENT1', $dept, 'C_OPERATING_UNIT_NAME');
					if(isset($findKey)){
						foreach($findKey as $susi){
							unset($finalquery[$susi]);
						}
					}
				}	
			}		
		}

	$finalquery = array_values($finalquery);	
	return $finalquery;
}

function search_revisions($dataArray, $search_value, $key_to_search, $other_matching_value = null, $other_matching_key = null) {
    // This function will search the revisions for a certain value
    // related to the associative key you are looking for3
	    $keys = array();
	    foreach ($dataArray as $key => $cur_value) {
	        if ($cur_value[$key_to_search] == $search_value) {
	            if (isset($other_matching_key) && isset($other_matching_value)) {
	                if ($cur_value[$other_matching_key] == $other_matching_value) {
	                    $keys[] = $key;
	                }
	            } else {
	                // I must keep in mind that some searches may have multiple
	                // matches and others would not, so leave it open with no continues.
	                $keys[] = $key;
	            }
	        }
	    }
	    return $keys;
	}


	function vtrad($vendor_code, $company_code){
		$this->db->select('TPCDE');
		$this->db->from('SMNTP_MMS_VTRAD');
		$this->db->where('VENDOR_CODE', $vendor_code);
		$this->db->where('COMPANY_CODE', $company_code);

		$query = $this->db->get();

		return $query->result_array();
	}

	function update_revert_config(){
		$query = $this->db->query('UPDATE SMNTP_SYSTEM_CONFIG SET CONFIG_VALUE = 1 WHERE CONFIG_NAME = "extraction_sap"');

		return $query;
	}
}
?>